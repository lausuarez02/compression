{"version":3,"sources":["components/body.js","App.js","reportWebVitals.js","index.js"],"names":["ImageCompressor","handle","e","imageFile","target","files","setState","originalLink","URL","createObjectURL","originalImage","outputFileName","name","uploadImage","changeValue","value","click","preventDefault","output","options","maxSizeMB","maxWidthOrHeight","useWebWorker","state","size","alert","imageCompression","then","x","downloadLink","compressedLink","clicked","style","backgroundColor","className","this","src","type","accept","onChange","onClick","href","download","React","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAmFqBA,E,kDACnB,aAAe,IAAD,8BACZ,gBAWFC,OAAS,SAAAC,GACP,IAAMC,EAAYD,EAAEE,OAAOC,MAAM,GACjC,EAAKC,SAAS,CACZC,aAAcC,IAAIC,gBAAgBN,GAClCO,cAAeP,EACfQ,eAAgBR,EAAUS,KAC1BC,aAAa,KAlBH,EAsBdC,YAAc,SAAAZ,GACZ,EAAKI,SAAL,eAAiBJ,EAAEE,OAAOQ,KAAOV,EAAEE,OAAOW,SAvB9B,EA0BdC,MAAQ,SAAAd,GACNA,EAAEe,iBAEF,IAWIC,EAXEC,EAAU,CACdC,UAAW,EACXC,iBAAkB,IAClBC,cAAc,GAGhB,OAAIH,EAAQC,WAAa,EAAKG,MAAMb,cAAcc,KAAO,MACvDC,MAAM,4CACC,IAITC,YAAiB,EAAKH,MAAMb,cAAeS,GAASQ,MAAK,SAAAC,GACvDV,EAASU,EAET,IAAMC,EAAerB,IAAIC,gBAAgBS,GACzC,EAAKZ,SAAS,CACZwB,eAAgBD,OAIpB,EAAKvB,SAAS,CAAEyB,SAAS,IAClB,IAjDP,EAAKR,MAAQ,CACXO,eACE,qEACFpB,cAAe,GACfH,aAAc,GACdwB,SAAS,EACTlB,aAAa,GARH,E,0CAsDd,WAAU,IAAD,OACP,OACI,qBAAKmB,MAAO,CAACC,gBAAgB,WAA7B,SACF,sBAAMC,UAAU,MAAhB,UACE,sBAAKA,UAAU,yBAAf,UACE,oDACA,iDACA,sDACA,iEAGF,sBAAKA,UAAU,WAAf,UACE,sBAAKA,UAAU,wCAAf,UACGC,KAAKZ,MAAMV,YAEV,qBACAqB,UAAU,OADV,SAID,qBAAKE,IAAKD,KAAKZ,MAAMhB,iBAElB,qBACA2B,UAAU,OADV,SAID,qBAAKE,IAAI,yEAGZ,qBAAKF,UAAU,gCAAf,SACE,uBACEG,KAAK,OACLC,OAAO,UACPJ,UAAU,yBACVK,SAAU,SAAArC,GAAC,OAAI,EAAKD,OAAOC,WAIjC,sBAAKgC,UAAU,qGAAf,UACE,uBACCC,KAAKZ,MAAMZ,eACV,wBACE0B,KAAK,SACLH,UAAU,gBACVM,QAAS,SAAAtC,GAAC,OAAI,EAAKc,MAAMd,IAH3B,sBAQA,gCAIJ,sBAAKgC,UAAU,6CAAf,UACE,qBAAKA,UAAU,OAAf,SACI,qBAAKE,IAAKD,KAAKZ,MAAMO,mBAExBK,KAAKZ,MAAMQ,QACV,qBAAKG,UAAU,gCAAf,SACE,mBACEO,KAAMN,KAAKZ,MAAMO,eACjBY,SAAUP,KAAKZ,MAAMZ,eACrBuB,UAAU,yBAHZ,wBASF,4C,GA1H+BS,IAAMC,WCrEpCC,MAXf,WACE,OAKF,cAAC,EAAD,KCGeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4134f00b.chunk.js","sourcesContent":["/*import React, {useState} from \"react\";\nimport imageCompression from \"browser-image-compression\";\n\nimport Card from \"react-bootstrap/Card\";\n\nconst Body = () => {\n    return(\n        <div className=\"m-5\">\n        <div className=\"text-light text-center\">\n          <h1>Three Simple Steps</h1>\n          <h3>1. Upload Image</h3>\n          <h3>2. Click on Compress</h3>\n          <h3>3. Download Compressed Image</h3>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n            {this.state.uploadImage ? (\n              <Card.Img\n                className=\"ht\"\n                variant=\"top\"\n                src={this.state.originalLink}\n              ></Card.Img>\n            ) : (\n              <Card.Img\n                className=\"ht\"\n                variant=\"top\"\n                src=\"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"\n              ></Card.Img>\n            )}\n            <div className=\"d-flex justify-content-center\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"mt-2 btn btn-dark w-75\"\n                onChange={e => this.handle(e)}\n              />\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\">\n            <br />\n            {this.state.outputFileName ? (\n              <button\n                type=\"button\"\n                className=\" btn btn-dark\"\n                onClick={e => this.click(e)}\n              >\n                Compress\n              </button>\n            ) : (\n              <></>\n            )}\n          </div>\n\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\n            <Card.Img variant=\"top\" src={this.state.compressedLink}></Card.Img>\n            {this.state.clicked ? (\n              <div className=\"d-flex justify-content-center\">\n                <a\n                  href={this.state.compressedLink}\n                  download={this.state.outputFileName}\n                  className=\"mt-2 btn btn-dark w-75\"\n                >\n                  Download\n                </a>\n              </div>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n}\n\nexport default Body;*/\n\n\nimport React from \"react\";\n\nimport imageCompression from \"browser-image-compression\";\n\n\nexport default class ImageCompressor extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      compressedLink:\n        \"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\",\n      originalImage: \"\",\n      originalLink: \"\",\n      clicked: false,\n      uploadImage: false\n    };\n  }\n\n  handle = e => {\n    const imageFile = e.target.files[0];\n    this.setState({\n      originalLink: URL.createObjectURL(imageFile),\n      originalImage: imageFile,\n      outputFileName: imageFile.name,\n      uploadImage: true\n    });\n  };\n\n  changeValue = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  click = e => {\n    e.preventDefault();\n\n    const options = {\n      maxSizeMB: 1,\n      maxWidthOrHeight: 500,\n      useWebWorker: true\n    };\n\n    if (options.maxSizeMB >= this.state.originalImage.size / 1024) {\n      alert(\"Image is too small, can't be Compressed!\");\n      return 0;\n    }\n\n    let output;\n    imageCompression(this.state.originalImage, options).then(x => {\n      output = x;\n\n      const downloadLink = URL.createObjectURL(output);\n      this.setState({\n        compressedLink: downloadLink\n      });\n    });\n\n    this.setState({ clicked: true });\n    return 1;\n  };\n\n  render() {\n    return (\n        <div style={{backgroundColor:\"#f77f00\"}}>\n      <div  className=\"m-5\" >\n        <div className=\"text-light text-center\">\n          <h1>Three Simple Steps</h1>\n          <h3>1. Upload Image</h3>\n          <h3>2. Click on Compress</h3>\n          <h3>3. Download Compressed Image</h3>\n        </div>\n\n        <div className=\"row mt-5\">\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12\">\n            {this.state.uploadImage ? (\n         \n              <div\n              className=\"card\"\n         \n              \n            ><img src={this.state.originalLink}/></div>\n            ) : (\n                <div\n                className=\"card\"\n           \n                \n              ><img src=\"http://navparivartan.in/wp-content/uploads/2018/11/placeholder.png\"/></div>\n             \n            )}\n            <div className=\"d-flex justify-content-center\">\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                className=\"mt-2 btn btn-dark w-75\"\n                onChange={e => this.handle(e)}\n              />\n            </div>\n          </div>\n          <div className=\"col-xl-4 col-lg-4 col-md-12 mb-5 mt-5 col-sm-12 d-flex justify-content-center align-items-baseline\">\n            <br />\n            {this.state.outputFileName ? (\n              <button\n                type=\"button\"\n                className=\" btn btn-dark\"\n                onClick={e => this.click(e)}\n              >\n                Compress\n              </button>\n            ) : (\n              <></>\n            )}\n          </div>\n\n          <div className=\"col-xl-4 col-lg-4 col-md-12 col-sm-12 mt-3\">\n            <div className=\"card\">\n                <img src={this.state.compressedLink}/>\n            </div>\n            {this.state.clicked ? (\n              <div className=\"d-flex justify-content-center\">\n                <a\n                  href={this.state.compressedLink}\n                  download={this.state.outputFileName}\n                  className=\"mt-2 btn btn-dark w-75\"\n                >\n                  Download\n                </a>\n              </div>\n            ) : (\n              <></>\n            )}\n          </div>\n        </div>\n      </div>\n      </div>\n    );\n  }\n}","\nimport ImageCompressor from \"./components/body\";\n\nfunction App() {\n  return (\n  \n\n\n\n<ImageCompressor/>\n   \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}